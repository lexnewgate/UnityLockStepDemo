package all;

message m_affirmmsg_s
{
	required int32 index = 1;
	required int32 time = 2;
}
message m_affirmmsg_c
{
	required int32 index = 1;
	required int32 time = 2;
}

message m_changecomponentmsg_s
{
	required int32 frame = 1;
	required int32 id = 2;
	required componentinfo info = 3;
}
message m_changecomponentmsg_c
{
	required int32 frame = 1;
	required int32 id = 2;
	required componentinfo info = 3;
}

message m_changesingletoncomponentmsg_s
{
	required int32 frame = 1;
	required componentinfo info = 2;
}
message m_changesingletoncomponentmsg_c
{
	required int32 frame = 1;
	required componentinfo info = 2;
}

message m_commandmsg_s
{
	required int32 index = 1;
	required int32 servertime = 2;
	repeated commandinfo msg = 3;
}
message m_commandmsg_c
{
	required int32 index = 1;
	required int32 servertime = 2;
	repeated commandinfo msg = 3;
}

message m_debugmsg_s
{
	required int32 frame = 1;
	repeated entityinfo infos = 2;
}
message m_debugmsg_c
{
	required int32 frame = 1;
	repeated entityinfo infos = 2;
}

message m_destroyentitymsg_s
{
	required int32 frame = 1;
	required int32 id = 2;
}
message m_destroyentitymsg_c
{
	required int32 frame = 1;
	required int32 id = 2;
}

message m_pursuemsg_s
{
	required int32 id = 1;
	required int32 recalcframe = 2;
	required int32 frame = 3;
	required int32 advancecount = 4;
	required int32 servertime = 5;
	required double updatespeed = 6;
}
message m_pursuemsg_c
{
	required int32 id = 1;
	required int32 recalcframe = 2;
	required int32 frame = 3;
	required int32 advancecount = 4;
	required int32 servertime = 5;
	required double updatespeed = 6;
}

message m_querycommand_s
{
	required int32 frame = 1;
	required int32 id = 2;
}
message m_querycommand_c
{
	required int32 frame = 1;
	required int32 id = 2;
}

message m_startsyncmsg_s
{
	required int32 frame = 1;
	required int32 advancecount = 2;
	required int32 intervaltime = 3;
	required int32 createentityindex = 4;
	required int32 randomseed = 5;
	required int8 syncrule = 6;
}
message m_startsyncmsg_c
{
	required int32 frame = 1;
	required int32 advancecount = 2;
	required int32 intervaltime = 3;
	required int32 createentityindex = 4;
	required int32 randomseed = 5;
	required int8 syncrule = 6;
}

message m_syncentitymsg_s
{
	required int32 frame = 1;
	repeated entityinfo infos = 2;
	repeated int32 destroylist = 3;
}
message m_syncentitymsg_c
{
	required int32 frame = 1;
	repeated entityinfo infos = 2;
	repeated int32 destroylist = 3;
}

message m_commandcomponent_s
{
	required syncvector3 movedir = 1;
	required syncvector3 skilldir = 2;
	required int32 element1 = 3;
	required int32 element2 = 4;
	required bool isfire = 5;
	required int32 id = 6;
	required int32 frame = 7;
	required int32 time = 8;
}
message m_commandcomponent_c
{
	required syncvector3 movedir = 1;
	required syncvector3 skilldir = 2;
	required int32 element1 = 3;
	required int32 element2 = 4;
	required bool isfire = 5;
	required int32 id = 6;
	required int32 frame = 7;
	required int32 time = 8;
}

message m_playerbuycharacter_c
{
	required int32 code = 1;
}

message m_playerbuycharacter_s
{
	required string characterid = 1;
}

message m_playerloginmsg_c
{
	required int32 code = 1;
	required string characterid = 2;
	repeated string owncharacter = 3;
	required int32 coin = 4;
	required int32 diamond = 5;
}

message m_playerloginmsg_s
{
	required string playerid = 1;
	required string nickname = 2;
}

message m_playermatchmsg_c
{
	required int32 predicttime = 1;
	required bool ismatched = 2;
}

message m_playermatchmsg_s
{
	required bool iscancel = 1;
}

message m_playerrename_c
{
	required int32 code = 1;
	required string newname = 2;
}

message m_playerrename_s
{
	required string newname = 1;
}

message m_playerresurgence_c
{
}

message m_playerresurgence_s
{
}

message m_playerselectcharacter_c
{
	required int32 code = 1;
}

message m_playerselectcharacter_s
{
	required string characterid = 1;
}

message m_playersettlement_c
{
	required int32 rank = 1;
	required int32 score = 2;
	required int32 historicalhighest = 3;
	required int32 diamond = 4;
}

message syncvector3
{
	required int32 x = 1;
	required int32 y = 2;
	required int32 z = 3;
}
message entityinfo
{
	required int32 id = 1;
	repeated componentinfo infos = 2;
}
message componentinfo
{
	required string m_compname = 1;
	required string content = 2;
}
message commandinfo
{
	required int32 frame = 1;
	required int32 id = 2;
	required syncvector3 movedir = 3;
	required syncvector3 skilldir = 4;
	required int32 element1 = 5;
	required int32 element2 = 6;
	required bool isfire = 7;
}
